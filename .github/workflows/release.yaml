name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (x.y.z)'
        required: true
        type: string
      dryRun:
        description: 'Dry-run mode runs the release pipeline without pushing its results.'
        required: false
        default: false
        type: boolean
      skipValidation:
        description: 'Skip output validation (linters, compilation checks, ...).'
        required: false
        default: false
        type: boolean

env:
  DEVBOX_VERSION: '0.13.1'

# Grant GITHUB_TOKEN the permissions required to make a release
permissions:
  contents: write # to push new branches
  actions: write # new branches will contain github actions
  pages: write      # to deploy to Pages
  id-token: write   # to verify the deployment originates from an appropriate source

# Allow only one concurrent release, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these releases to complete.
concurrency:
  group: "release"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  codegen:
    name: Run codegen and release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Setup cog
        uses: ./.github/actions/setup-cog

      - name: Install devbox
        uses: jetify-com/devbox-install-action@a03caf5813591bc882139eba6ae947930a83a427 #v0.11.0
        with:
          enable-cache: 'true'
          devbox-version: ${{ env.DEVBOX_VERSION }}

      - name: Run the release script
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global url."https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "git@github.com:"

          devbox run ./scripts/release.sh "${VERSION}"
        env:
          TERM: 'xterm'
          LOG_LEVEL: '7' # debug
          DRY_RUN: ${{ inputs.dryRun == true && 'yes' || 'no' }}
          SKIP_VALIDATION: ${{ inputs.skipValidation == true && 'yes' || 'no' }}
          VERSION: ${{ inputs.version }}

  build_docs:
    needs: codegen

    name: Build documentation
    runs-on: ubuntu-latest

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          ref: main # to ensure that we build docs using the results of the codegen job

      - name: Install devbox
        uses: jetify-com/devbox-install-action@a03caf5813591bc882139eba6ae947930a83a427 #v0.11.0
        with:
          enable-cache: 'true'
          devbox-version: ${{ env.DEVBOX_VERSION }}

      - name: Build documentation website
        run: |
          devbox run ./scripts/build-docs.sh

      - name: Upload static files as artifact
        id: deployment
        if: ${{ ! inputs.dryRun }}
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa #v3.0.1
        with:
          path: ./build/docs/

  publish_documentation:
    needs: build_docs

    name: Publish documentation
    runs-on: ubuntu-latest

    if: ${{ ! inputs.dryRun }}

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e #v4.0.5

  release_python:
    needs: codegen

    name: Release Python package
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # mandatory for trusted publishing

    environment:
      name: pypi
      url: https://pypi.org/p/promql_builder

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          ref: main # to ensure that we use the latest and greatest

      - name: Install devbox
        uses: jetify-com/devbox-install-action@a03caf5813591bc882139eba6ae947930a83a427 #v0.11.0
        with:
          enable-cache: 'true'
          devbox-version: ${{ env.DEVBOX_VERSION }}

      - name: Build a binary wheel and a source tarball
        run: devbox run ./scripts/build-python-wheel.sh

      - name: Publish distribution ðŸ“¦ to PyPI
        if: ${{ ! inputs.dryRun }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: python/dist/
          attestations: false

  release_typescript:
    needs: codegen

    name: Release Typescript package
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    env:
      NODE_VERSION: '22'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          ref: main # to ensure that we use the latest and greatest

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          scope: '@grafana'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn build

      - name: Publish to NPM registry
        if: ${{ ! inputs.dryRun }}
        run: yarn publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
